Creation and insertion of data in db

use ZoivaECommerce
 
----------------------------------------------------------------------------------------------------------------------

db.product_catalog.insertMany([
{ "manufacturer" : "apple", "price" : 20000, "display" : '4.7 inch Retina HD', "model" : 'iPhone 6S' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "samsung", "price" : 15000, "android" : 'Oreo', "model" : 'Note 4' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "samsung", "price" : 5450, "processor" : 'Exynos 8895 Octa Core', "model" : 'Galaxy S8' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "apple", "price" : 50000, "display" : '5.5 inch Retina HD', "model" : 'iPhone 6 plus' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "samsung", "price" : 10570, "processor" : 'Exynos 8890', "model" : 'Galaxy S7 Edge' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "lenovo", "price" : 10000, "android" : 'Oreo', "model" : 'K8 Plus' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "lenovo", "price" : 9920, "battery" : 4000, "model" : 'K6 Note' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "lenovo", "price" : 10000, "material" : 'metal unibody', "model" : 'Vibe K5 Note' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "apple", "price" : 19999, "camera" : '12 MP', "model" : 'iPhone SE', "categories": {'main':'electronics', 'sub': 'smartphones'} },
{ "manufacturer" : "mi", "price" : 20000, "android" : 'Oreo', "model" : 'Max 2' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "mi", "price" : 33000, "camera" : '12 MP', "model" : 'Mix 2' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "mi", "price" : 15000, "memory" : '64 GB', "model" : 'A1' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "mi", "price" : 15000, "display" : '5 inch HD', "model" : '4i' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "moto", "price" : 10000, "android" : 'Nougat', "model" : 'E4 Plus' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "moto", "price" : 7000, "ram" : '2 GB', "model" : 'C Plus' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "samsung", "price" : 14000, "ram" : '4 GB', "model" : 'Galaxy On Max', "categories": {'main':'electronics', 'sub': 'smartphones'} },
{ "manufacturer" : "honor", "price" : 18000, "battery" : 3340, "model" : '9i' , "categories": {'main':'electronics', 'sub': 'smartphones'}},
{ "manufacturer" : "google", "price" : 45000, "android" : 'Oreo', "model" : 'Pixel 2', "categories": {'main':'electronics', 'sub': 'smartphones'} }
])

----------------------------------------------------------------------------------------------------------------------

1. Query to add further documents in the collection:

db.product_catalog.insert({ "manufacturer" : 'OPPO', "price" : 20000, "android" : 'Nougat', "model" : 'F5', "camera":'16 MP', "display":'6 inch',"categories": {'main':'electronics', 'sub': 'smartphones'} })

db.product_catalog.insert({ "manufacturer" : 'OPPO', "price" : 14000, "memory" : '32 GB', "model" : 'A57', "camera":'13 MP', "display":'5.2 inch',"categories": {'main':'electronics', 'sub': 'smartphones'} })

----------------------------------------------------------------------------------------------------------------------

2. Retrieve the manufacturer, model and price of all smartphones that cost less than 10000:

db.product_catalog.find({price:{$lt:10000}},{_id:0,manufacturer:1,model:1,price:1})

----------------------------------------------------------------------------------------------------------------------

3. Retrieve the manufacturer and model of all phones running android Oreo:

db.product_catalog.find({android:'Oreo'},{_id:0,manufacturer:1,model:1})

----------------------------------------------------------------------------------------------------------------------

4. Retrieve the model and price of mobiles that have battery above 3000:

db.product_catalog.find({battery:{$gt:3000}},{_id:0,model:1,price:1})

----------------------------------------------------------------------------------------------------------------------

5. Update the following smartphones with additional attributes as shown in the table below:

db.product_catalog.update({manufacturer:'mi',model:'Max 2'},{$set:{memory:'32, 64, 128 GB',price:15000}})

db.product_catalog.update({manufacturer:'google',model:'Pixel 2'},{$set:{colors:['Clearly White, Jet Black, Very Silver'],memory:'32, 64, 128 GB'}})

----------------------------------------------------------------------------------------------------------------------

6. Create a new collection called SortedByModel, with the first 5 mobiles from the catalog when sorted by model name:

db.product_catalog.aggregate( [{ $sort : { model: 1 } },{ $limit: 5},{ $out: "SortedByModel"}] )

----------------------------------------------------------------------------------------------------------------------

7. Create a new collection called Under10k, with all smartphones that cost less than 10000:

db.product_catalog.aggregate( [{ $match: {price:{$lt:10000}} }, { $out:"Under10k" }])

----------------------------------------------------------------------------------------------------------------------

8. Create a new collection called fifteenKAndAbove, with all the smartphones that cost 15000 or more:

db.product_catalog.aggregate( [{ $match: {price:{$gte:15000}} }, { $out:"fifteenKAndAbove" }])

----------------------------------------------------------------------------------------------------------------------

9. Create an ascending single field index called asc_price on the price field:

db.product_catalog.createIndex({ price: 1 },{ name:"asc_price" })

----------------------------------------------------------------------------------------------------------------------

10. Create a descending single field index called desc_model on the model field:

db.product_catalog.createIndex({ model: -1 },{ name:"desc_model" })

----------------------------------------------------------------------------------------------------------------------
